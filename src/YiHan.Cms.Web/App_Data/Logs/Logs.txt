DEBUG 2018-01-30 12:16:48,949 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 12:16:48,970 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 12:16:48,979 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,984 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,984 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,984 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,984 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,984 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,985 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,985 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,985 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,985 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:48,990 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 12:16:49,306 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:16:49,306 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:16:49,306 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:16:49,306 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:16:49,776 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:16:52,334 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 12:16:52,385 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 12:16:52,386 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 12:16:52,395 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 12:16:52,413 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 12:16:52,466 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 12:16:53,169 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:16:53,324 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 12:16:53,324 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 12:16:53,328 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingEditDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingListDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 12:16:53,329 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 12:16:53,330 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 12:16:53,830 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:16:53,877 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:16:53,890 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 12:16:53,891 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 12:16:53,892 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 12:16:53,894 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 12:16:53,895 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 12:16:53,897 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 12:16:53,898 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 12:16:53,900 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 12:16:53,901 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 12:16:53,902 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 12:16:53,904 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 12:16:53,905 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 12:16:53,907 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 12:16:53,908 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 12:16:53,909 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 12:16:53,911 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 12:16:53,913 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 12:16:53,914 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 12:16:53,916 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Dtos.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 12:16:53,917 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 12:16:53,919 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 12:16:53,920 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 12:16:53,921 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 12:16:53,923 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 12:16:53,924 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 12:16:53,926 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 12:16:53,928 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 12:16:53,930 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 12:19:45,288 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:19:45,289 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:19:45,290 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:19:45,293 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:19:48,387 [10   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"b53b4248-1473-4ccd-991c-39bccbc9940b","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T04:19:48.3801436Z","Properties":{}}
DEBUG 2018-01-30 12:19:48,955 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: b53b4248-1473-4ccd-991c-39bccbc9940b
DEBUG 2018-01-30 12:20:30,779 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: b53b4248-1473-4ccd-991c-39bccbc9940b
DEBUG 2018-01-30 12:20:31,812 [9    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 12:20:31,813 [9    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 12:20:31,814 [9    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 12:20:31,814 [9    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 12:20:51,949 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 12:20:51,968 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 12:20:51,977 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,980 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,981 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,982 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,983 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:51,987 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 12:20:52,227 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:20:52,227 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:20:52,227 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:20:52,227 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 12:20:52,697 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 12:20:54,637 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 12:20:54,645 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 12:20:54,646 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 12:20:54,654 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 12:20:54,668 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 12:20:54,722 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 12:20:55,422 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:20:55,557 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 12:20:55,557 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 12:20:55,561 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 12:20:55,562 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 12:20:55,562 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 12:20:55,562 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 12:20:55,563 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 12:20:55,564 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 12:20:55,565 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 12:20:56,072 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:20:56,093 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 12:20:56,107 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 12:20:56,108 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 12:20:56,109 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 12:20:56,111 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 12:20:56,112 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 12:20:56,114 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 12:20:56,116 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 12:20:56,117 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 12:20:56,119 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 12:20:56,121 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 12:20:56,122 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 12:20:56,123 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 12:20:56,125 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 12:20:56,126 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 12:20:56,128 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 12:20:56,129 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 12:20:56,131 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 12:20:56,132 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 12:20:56,134 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Dtos.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 12:20:56,135 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 12:20:56,137 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 12:20:56,138 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 12:20:56,140 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 12:20:56,141 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 12:20:56,143 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 12:20:56,144 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 12:20:56,146 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 12:20:56,147 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 12:21:13,128 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:21:13,129 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:21:13,130 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:21:13,133 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 12:22:59,092 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:22:59,093 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:22:59,093 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:22:59,097 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 12:23:13,262 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:13,263 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:13,264 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:13,267 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 12:23:15,865 [7    ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:15,867 [7    ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:15,868 [7    ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:15,871 [7    ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:23:16,816 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"484d6fd1-409d-43ef-b3c5-11b177142571","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T04:23:16.8100651Z","Properties":{}}
DEBUG 2018-01-30 12:23:17,085 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 484d6fd1-409d-43ef-b3c5-11b177142571
DEBUG 2018-01-30 12:23:18,368 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 484d6fd1-409d-43ef-b3c5-11b177142571
WARN  2018-01-30 12:23:21,403 [18   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,404 [18   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,405 [18   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,408 [18   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,664 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,665 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,666 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:21,669 [15   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:23:22,663 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d4bc1674-9a95-42d2-ad1c-db5d70fc6cb0","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T04:23:22.6633999Z","Properties":{}}
DEBUG 2018-01-30 12:23:22,684 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d4bc1674-9a95-42d2-ad1c-db5d70fc6cb0
DEBUG 2018-01-30 12:23:25,545 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d4bc1674-9a95-42d2-ad1c-db5d70fc6cb0
WARN  2018-01-30 12:23:37,767 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:37,767 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:37,768 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:37,771 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 12:23:38,041 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:38,042 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:38,042 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:38,045 [10   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:23:38,801 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f30c4797-2b51-4926-9ed7-dcbd50a9cb03","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T04:23:38.8013229Z","Properties":{}}
DEBUG 2018-01-30 12:23:38,821 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f30c4797-2b51-4926-9ed7-dcbd50a9cb03
WARN  2018-01-30 12:23:41,396 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:41,397 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:41,398 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:41,400 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:23:41,475 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f30c4797-2b51-4926-9ed7-dcbd50a9cb03
WARN  2018-01-30 12:23:42,304 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 12:23:42,305 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 12:23:42,305 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 12:23:42,309 [14   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 12:23:42,897 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T04:23:42.8965572Z","Properties":{}}
DEBUG 2018-01-30 12:23:42,908 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f247efbc-415a-4e33-a6bc-4f85f613d242
DEBUG 2018-01-30 13:57:26,870 [27   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 13:57:26,871 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 13:57:26,871 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 13:57:26,871 [27   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 13:57:53,032 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 13:57:53,049 [16   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 13:57:53,058 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,060 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,061 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,062 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,062 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,062 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,063 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,064 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,064 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,064 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,064 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:53,068 [16   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 13:57:53,310 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 13:57:53,310 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 13:57:53,310 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 13:57:53,310 [16   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 13:57:53,773 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 13:57:55,730 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 13:57:55,736 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 13:57:55,738 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 13:57:55,747 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 13:57:55,762 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 13:57:55,815 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 13:57:56,572 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 13:57:56,712 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 13:57:56,712 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 13:57:56,715 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 13:57:56,715 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 13:57:56,715 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 13:57:56,716 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ArticeListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.CategoryListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImGalleryListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Dtos.SysSettingListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 13:57:56,717 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 13:57:56,718 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 13:57:57,167 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 13:57:57,187 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 13:57:57,200 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 13:57:57,201 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 13:57:57,202 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 13:57:57,204 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 13:57:57,205 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 13:57:57,207 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 13:57:57,209 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 13:57:57,211 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 13:57:57,212 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 13:57:57,214 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 13:57:57,215 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 13:57:57,216 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 13:57:57,218 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 13:57:57,219 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 13:57:57,221 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 13:57:57,222 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 13:57:57,223 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 13:57:57,225 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 13:57:57,226 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Dtos.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 13:57:57,228 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 13:57:57,230 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 13:57:57,231 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 13:57:57,232 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 13:57:57,234 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 13:57:57,235 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 13:57:57,237 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 13:57:57,238 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 13:57:57,240 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 13:58:01,759 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:01.3632029Z","Properties":{}}
DEBUG 2018-01-30 13:58:01,774 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:01.3632029Z","Properties":{}}
DEBUG 2018-01-30 13:58:01,793 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:01.3632029Z","Properties":{}}
DEBUG 2018-01-30 13:58:01,794 [31   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:01.3742036Z","Properties":{}}
DEBUG 2018-01-30 13:58:01,798 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"f247efbc-415a-4e33-a6bc-4f85f613d242","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:01.3802039Z","Properties":{}}
DEBUG 2018-01-30 13:58:06,052 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a754c37b-19fa-4532-9e55-9c79fe6f0232","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T05:58:06.0524712Z","Properties":{}}
WARN  2018-01-30 13:58:12,829 [31   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 13:58:12,831 [31   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 13:58:12,831 [31   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 13:58:12,835 [31   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 13:58:41,331 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f247efbc-415a-4e33-a6bc-4f85f613d242
WARN  2018-01-30 14:08:21,745 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:08:21,746 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:08:21,747 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:08:21,749 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:08:23,245 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a754c37b-19fa-4532-9e55-9c79fe6f0232
WARN  2018-01-30 14:08:24,608 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:08:24,609 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:08:24,610 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:08:24,613 [26   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:08:25,916 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"38a0b404-2e74-4cbd-bed9-12305a78bcb7","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:08:25.9169254Z","Properties":{}}
DEBUG 2018-01-30 14:08:26,048 [33   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 38a0b404-2e74-4cbd-bed9-12305a78bcb7
DEBUG 2018-01-30 14:08:39,074 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 38a0b404-2e74-4cbd-bed9-12305a78bcb7
DEBUG 2018-01-30 14:19:13,509 [32   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:19:13,510 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:19:13,510 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:19:13,510 [32   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:21:12,249 [25   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:21:12,267 [25   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:21:12,275 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,279 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,279 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,279 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,279 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,279 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,280 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,280 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,280 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,280 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,281 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,282 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,282 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,282 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,282 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,282 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:12,286 [25   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:21:12,550 [25   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:21:12,550 [25   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:21:12,550 [25   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:21:12,550 [25   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:21:13,034 [25   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:21:15,037 [25   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:21:15,044 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:21:15,046 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:21:15,054 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:21:15,068 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:21:15,124 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:21:15,856 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:21:15,999 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:21:15,999 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:21:16,004 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:21:16,005 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:21:16,006 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:21:16,580 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:21:16,613 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:21:16,631 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:21:16,634 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:21:16,635 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:21:16,637 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:21:16,639 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:21:16,640 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:21:16,641 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:21:16,643 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:21:16,644 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:21:16,646 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:21:16,647 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:21:16,648 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:21:16,650 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:21:16,651 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:21:16,654 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:21:16,655 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:21:16,657 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:21:16,658 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:21:16,660 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:21:16,661 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:21:16,663 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:21:16,665 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:21:16,666 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:21:16,668 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:21:16,671 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:21:16,673 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:21:16,675 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:21:16,677 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 14:21:32,492 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:21:32,493 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:21:32,494 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:21:32,498 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:21:35,787 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:21:35,787 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:21:35,788 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:21:35,791 [23   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:21:37,119 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:21:37,120 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:21:37,121 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:21:37,124 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,331 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,332 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,333 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,335 [33   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,961 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,962 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,962 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:24:50,965 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:24:52,967 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"17c28d47-dbac-4dda-9c02-36bbdb7bf567","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:24:52.960381Z","Properties":{}}
DEBUG 2018-01-30 14:24:53,298 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 17c28d47-dbac-4dda-9c02-36bbdb7bf567
DEBUG 2018-01-30 14:24:54,638 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 17c28d47-dbac-4dda-9c02-36bbdb7bf567
DEBUG 2018-01-30 14:28:14,809 [24   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:28:14,811 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:28:14,811 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:28:14,811 [24   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:28:40,782 [17   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:28:40,806 [17   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:28:40,816 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,818 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,818 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,818 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,818 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,818 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,819 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,819 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,819 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,819 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,821 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,822 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,823 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,823 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,823 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,823 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,823 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,824 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,824 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,824 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,824 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:40,829 [17   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:28:41,098 [17   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:28:41,098 [17   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:28:41,098 [17   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:28:41,098 [17   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:28:41,600 [17   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:28:43,656 [17   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:28:43,664 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:28:43,665 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:28:43,702 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:28:43,717 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:28:43,771 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:28:44,498 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:28:44,638 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:28:44,638 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:28:44,642 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:28:44,642 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:28:44,642 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:28:44,642 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:28:44,643 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:28:44,643 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:28:44,643 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:28:44,643 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:28:44,644 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:28:44,645 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:28:44,646 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:28:45,240 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:28:45,260 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:28:45,277 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:28:45,279 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:28:45,281 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:28:45,282 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:28:45,284 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:28:45,287 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:28:45,289 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:28:45,290 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:28:45,292 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:28:45,293 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:28:45,298 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:28:45,300 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:28:45,302 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:28:45,303 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:28:45,305 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:28:45,307 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:28:45,309 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:28:45,311 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:28:45,313 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:28:45,314 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:28:45,317 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:28:45,318 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:28:45,320 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:28:45,323 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:28:45,325 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:28:45,327 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:28:45,329 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:28:45,330 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 14:29:01,848 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:29:01,849 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:29:01,850 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:29:01,853 [29   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:32:29,902 [29   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:32:29,904 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:32:29,905 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:32:29,905 [29   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:33:08,621 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:33:08,638 [16   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:33:08,647 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,649 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,649 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,649 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,649 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,649 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,650 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,650 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,650 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,650 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,651 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,651 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,651 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,651 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,653 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,653 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,653 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,653 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,654 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,654 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,654 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:08,658 [16   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:33:08,917 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:33:08,917 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:33:08,917 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:33:08,917 [16   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:33:09,407 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:33:11,417 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:33:11,424 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:33:11,426 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:33:11,434 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:33:11,448 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:33:11,504 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:33:12,218 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:33:12,360 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:33:12,360 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:33:12,363 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:33:12,363 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:33:12,363 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:33:12,363 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:33:12,364 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:33:12,365 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:33:12,366 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:33:12,830 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:33:12,851 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:33:12,865 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:33:12,866 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:33:12,868 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:33:12,869 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:33:12,870 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:33:12,871 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:33:12,873 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:33:12,874 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:33:12,875 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:33:12,876 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:33:12,878 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:33:12,879 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:33:12,881 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:33:12,882 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:33:12,883 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:33:12,885 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:33:12,886 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:33:12,888 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:33:12,889 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:33:12,891 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:33:12,893 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:33:12,895 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:33:12,897 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:33:12,898 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:33:12,900 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:33:12,901 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:33:12,902 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:33:12,904 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 14:33:29,182 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:33:29,183 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:33:29,184 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:33:29,187 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:37:18,902 [23   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:37:18,903 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:37:18,904 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:37:18,904 [23   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:37:45,459 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:37:45,476 [16   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:37:45,484 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,486 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,487 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,488 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,488 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,488 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,488 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,488 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,489 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,490 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,490 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:45,494 [16   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:37:45,726 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:37:45,726 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:37:45,726 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:37:45,726 [16   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:37:46,217 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:37:48,226 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:37:48,233 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:37:48,234 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:37:48,243 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:37:48,257 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:37:48,311 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:37:49,155 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:37:49,293 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:37:49,293 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:37:49,297 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:37:49,298 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:37:49,299 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:37:49,300 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:37:49,749 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:37:49,770 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:37:49,783 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:37:49,784 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:37:49,785 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:37:49,786 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:37:49,788 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:37:49,789 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:37:49,790 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:37:49,791 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:37:49,792 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:37:49,793 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:37:49,795 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:37:49,796 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:37:49,797 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:37:49,799 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:37:49,800 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:37:49,802 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:37:49,803 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:37:49,804 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:37:49,805 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:37:49,806 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:37:49,807 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:37:49,809 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:37:49,810 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:37:49,811 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:37:49,813 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:37:49,814 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:37:49,815 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:37:49,816 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 14:38:06,148 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:06,149 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:38:06,150 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:38:06,153 [32   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:38:13,616 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:13,617 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'CategoryHeaderInfo' in localization source 'Cms'!
WARN  2018-01-30 14:38:16,013 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:16,014 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:38:16,015 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:38:16,017 [24   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
WARN  2018-01-30 14:38:18,131 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:18,132 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:38:18,133 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:38:18,135 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:38:19,909 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f4901e34-1ca1-401d-bf7b-7a3794b59c3a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:38:19.9025355Z","Properties":{}}
DEBUG 2018-01-30 14:38:20,173 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f4901e34-1ca1-401d-bf7b-7a3794b59c3a
WARN  2018-01-30 14:38:23,003 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:23,004 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'CategoryHeaderInfo' in localization source 'Cms'!
WARN  2018-01-30 14:38:23,244 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:23,245 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:38:23,246 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:38:23,248 [13   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:38:23,331 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f4901e34-1ca1-401d-bf7b-7a3794b59c3a
WARN  2018-01-30 14:38:24,910 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'Category' in localization source 'Cms'!
WARN  2018-01-30 14:38:24,911 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'Artice' in localization source 'Cms'!
WARN  2018-01-30 14:38:24,911 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'TempSystem' in localization source 'Cms'!
WARN  2018-01-30 14:38:24,914 [20   ] naries.DictionaryBasedLocalizationSource - Can not find 'IndexTemp' in localization source 'Cms'!
DEBUG 2018-01-30 14:38:25,400 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:38:25.40085Z","Properties":{}}
DEBUG 2018-01-30 14:38:25,412 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d10493ea-dff4-4c3c-a210-dd8aa0133bf4
DEBUG 2018-01-30 14:44:47,936 [32   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:44:47,937 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:44:47,938 [32   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:44:47,938 [32   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:45:13,649 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:45:13,666 [16   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:45:13,675 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,677 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,677 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,677 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,677 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,678 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,678 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,678 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,678 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,678 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,679 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,679 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,679 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,679 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,679 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,680 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:13,685 [16   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:45:13,919 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:45:13,919 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:45:13,919 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:45:13,919 [16   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:45:14,396 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:45:16,330 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:45:16,338 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:45:16,340 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:45:16,348 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:45:16,363 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:45:16,416 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:45:17,162 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:45:17,302 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:45:17,302 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:45:17,306 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:45:17,307 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:45:17,308 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:45:17,309 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:45:17,911 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:45:17,932 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:45:17,945 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:45:17,946 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:45:17,947 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:45:17,948 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:45:17,950 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:45:17,951 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:45:17,952 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:45:17,953 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:45:17,955 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:45:17,956 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:45:17,957 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:45:17,958 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:45:17,960 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:45:17,961 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:45:17,962 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:45:17,963 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:45:17,965 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:45:17,966 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:45:17,967 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:45:17,968 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:45:17,970 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:45:17,971 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:45:17,972 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:45:17,973 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:45:17,975 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:45:17,976 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:45:17,977 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:45:17,978 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 14:45:22,456 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:22.0076785Z","Properties":{}}
DEBUG 2018-01-30 14:45:22,473 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:22.0076785Z","Properties":{}}
DEBUG 2018-01-30 14:45:22,490 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:22.0076785Z","Properties":{}}
DEBUG 2018-01-30 14:45:22,490 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:22.0076785Z","Properties":{}}
DEBUG 2018-01-30 14:45:22,491 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"d10493ea-dff4-4c3c-a210-dd8aa0133bf4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:22.0076785Z","Properties":{}}
DEBUG 2018-01-30 14:45:27,093 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d1e10506-67a6-4f97-aca1-75c5f9bc357f","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:45:27.0939694Z","Properties":{}}
DEBUG 2018-01-30 14:46:01,976 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d10493ea-dff4-4c3c-a210-dd8aa0133bf4
DEBUG 2018-01-30 14:46:08,190 [10   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d1e10506-67a6-4f97-aca1-75c5f9bc357f
DEBUG 2018-01-30 14:46:10,262 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"961a2a76-b05a-4ae7-9157-d5ed483d5d7f","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:46:10.2624385Z","Properties":{}}
DEBUG 2018-01-30 14:46:10,337 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 961a2a76-b05a-4ae7-9157-d5ed483d5d7f
DEBUG 2018-01-30 14:46:17,035 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 961a2a76-b05a-4ae7-9157-d5ed483d5d7f
DEBUG 2018-01-30 14:46:18,982 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d462d4c2-f98b-4740-ae39-6626a45982ec","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:46:18.9829373Z","Properties":{}}
DEBUG 2018-01-30 14:46:19,011 [10   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d462d4c2-f98b-4740-ae39-6626a45982ec
DEBUG 2018-01-30 14:46:55,330 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d462d4c2-f98b-4740-ae39-6626a45982ec
DEBUG 2018-01-30 14:46:56,883 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f5a0be14-9149-401b-a7dc-e31e7516bd9a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:46:56.8831051Z","Properties":{}}
DEBUG 2018-01-30 14:46:57,303 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f5a0be14-9149-401b-a7dc-e31e7516bd9a
DEBUG 2018-01-30 14:47:36,548 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f5a0be14-9149-401b-a7dc-e31e7516bd9a
DEBUG 2018-01-30 14:47:38,134 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"44c66f83-8c39-4fc3-a4ac-3d95e6b9e3ff","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:47:38.1344645Z","Properties":{}}
DEBUG 2018-01-30 14:47:38,164 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 44c66f83-8c39-4fc3-a4ac-3d95e6b9e3ff
DEBUG 2018-01-30 14:49:38,585 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 44c66f83-8c39-4fc3-a4ac-3d95e6b9e3ff
DEBUG 2018-01-30 14:49:40,778 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2d12e003-5ca9-41f0-8419-483136fb3530","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:49:40.7784794Z","Properties":{}}
DEBUG 2018-01-30 14:49:40,843 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 2d12e003-5ca9-41f0-8419-483136fb3530
ERROR 2018-01-30 14:49:54,837 [7    ] eas.Mpa.Controllers.TempSystemController - 未将对象引用设置到对象的实例。
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 ASP._Page_Areas_Mpa_Views_TempSystem_Index_cshtml.Execute() 位置 d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\TempSystem\Index.cshtml:行号 48
   在 System.Web.WebPages.WebPageBase.ExecutePageHierarchy()
   在 System.Web.Mvc.WebViewPage.ExecutePageHierarchy()
   在 System.Web.WebPages.StartPage.RunPage()
   在 System.Web.WebPages.StartPage.ExecutePageHierarchy()
   在 System.Web.WebPages.WebPageBase.ExecutePageHierarchy(WebPageContext pageContext, TextWriter writer, WebPageRenderingBase startPage)
   在 System.Web.Mvc.RazorView.RenderView(ViewContext viewContext, TextWriter writer, Object instance)
   在 System.Web.Mvc.BuildManagerCompiledView.Render(ViewContext viewContext, TextWriter writer)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2018-01-30 14:49:54,886 [32   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 2d12e003-5ca9-41f0-8419-483136fb3530
DEBUG 2018-01-30 14:50:01,249 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f8eed067-3faa-45fe-b921-35516d407d62","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:50:01.2486502Z","Properties":{}}
DEBUG 2018-01-30 14:50:01,277 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: f8eed067-3faa-45fe-b921-35516d407d62
ERROR 2018-01-30 14:50:21,746 [10   ] Areas.Mpa.Controllers.CategoryController - d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\Category\_CreateOrEditModal.cshtml(2): error CS0234: 命名空间“YiHan.Cms”中不存在类型或命名空间名称“Dtos”(是否缺少程序集引用?)
System.Web.HttpCompileException (0x80004005): d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\Category\_CreateOrEditModal.cshtml(2): error CS0234: 命名空间“YiHan.Cms”中不存在类型或命名空间名称“Dtos”(是否缺少程序集引用?)
   在 System.Web.Compilation.AssemblyBuilder.Compile()
   在 System.Web.Compilation.BuildProvidersCompiler.PerformBuild()
   在 System.Web.Compilation.BuildManager.CompileWebFile(VirtualPath virtualPath)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultInternal(VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultWithNoAssert(HttpContext context, VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVirtualPathObjectFactory(VirtualPath virtualPath, HttpContext context, Boolean allowCrossApp, Boolean throwIfNotFound)
   在 System.Web.Compilation.BuildManager.GetCompiledType(VirtualPath virtualPath)
   在 System.Web.Compilation.BuildManager.GetCompiledType(String virtualPath)
   在 System.Web.Mvc.BuildManagerWrapper.System.Web.Mvc.IBuildManager.GetCompiledType(String virtualPath)
   在 System.Web.Mvc.BuildManagerCompiledView.Render(ViewContext viewContext, TextWriter writer)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
ERROR 2018-01-30 14:50:22,215 [19   ] Areas.Mpa.Controllers.CategoryController - d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\Category\_CreateOrEditModal.cshtml(2): error CS0234: 命名空间“YiHan.Cms”中不存在类型或命名空间名称“Dtos”(是否缺少程序集引用?)
System.Web.HttpCompileException (0x80004005): d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\Category\_CreateOrEditModal.cshtml(2): error CS0234: 命名空间“YiHan.Cms”中不存在类型或命名空间名称“Dtos”(是否缺少程序集引用?)
   在 System.Web.Compilation.BuildManager.PostProcessFoundBuildResult(BuildResult result, Boolean keyFromVPP, VirtualPath virtualPath)
   在 System.Web.Compilation.BuildManager.GetBuildResultFromCacheInternal(String cacheKey, Boolean keyFromVPP, VirtualPath virtualPath, Int64 hashCode, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultFromCacheInternal(VirtualPath virtualPath, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultInternal(VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVPathBuildResultWithNoAssert(HttpContext context, VirtualPath virtualPath, Boolean noBuild, Boolean allowCrossApp, Boolean allowBuildInPrecompile, Boolean throwIfNotFound, Boolean ensureIsUpToDate)
   在 System.Web.Compilation.BuildManager.GetVirtualPathObjectFactory(VirtualPath virtualPath, HttpContext context, Boolean allowCrossApp, Boolean throwIfNotFound)
   在 System.Web.Compilation.BuildManager.GetCompiledType(VirtualPath virtualPath)
   在 System.Web.Compilation.BuildManager.GetCompiledType(String virtualPath)
   在 System.Web.Mvc.BuildManagerWrapper.System.Web.Mvc.IBuildManager.GetCompiledType(String virtualPath)
   在 System.Web.Mvc.BuildManagerCompiledView.Render(ViewContext viewContext, TextWriter writer)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2018-01-30 14:51:36,655 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: f8eed067-3faa-45fe-b921-35516d407d62
DEBUG 2018-01-30 14:51:39,120 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"dc6ea512-4f67-4c2b-a7a4-d4e37f8eabcd","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:51:39.1202481Z","Properties":{}}
DEBUG 2018-01-30 14:51:39,168 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: dc6ea512-4f67-4c2b-a7a4-d4e37f8eabcd
DEBUG 2018-01-30 14:54:33,270 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: dc6ea512-4f67-4c2b-a7a4-d4e37f8eabcd
DEBUG 2018-01-30 14:54:35,115 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"93be5b7d-8ede-43ac-ab9d-26296eed46fe","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:54:35.1153145Z","Properties":{}}
DEBUG 2018-01-30 14:54:35,169 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 93be5b7d-8ede-43ac-ab9d-26296eed46fe
ERROR 2018-01-30 14:54:38,083 [26   ] eas.Mpa.Controllers.TempSystemController - 未将对象引用设置到对象的实例。
System.NullReferenceException: 未将对象引用设置到对象的实例。
   在 ASP._Page_Areas_Mpa_Views_TempSystem_Index_cshtml.Execute() 位置 d:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.Web\Areas\Mpa\Views\TempSystem\Index.cshtml:行号 48
   在 System.Web.WebPages.WebPageBase.ExecutePageHierarchy()
   在 System.Web.Mvc.WebViewPage.ExecutePageHierarchy()
   在 System.Web.WebPages.StartPage.RunPage()
   在 System.Web.WebPages.StartPage.ExecutePageHierarchy()
   在 System.Web.WebPages.WebPageBase.ExecutePageHierarchy(WebPageContext pageContext, TextWriter writer, WebPageRenderingBase startPage)
   在 System.Web.Mvc.RazorView.RenderView(ViewContext viewContext, TextWriter writer, Object instance)
   在 System.Web.Mvc.BuildManagerCompiledView.Render(ViewContext viewContext, TextWriter writer)
   在 System.Web.Mvc.ViewResultBase.ExecuteResult(ControllerContext context)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResult(ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultFilterRecursive(IList`1 filters, Int32 filterIndex, ResultExecutingContext preContext, ControllerContext controllerContext, ActionResult actionResult)
   在 System.Web.Mvc.ControllerActionInvoker.InvokeActionResultWithFilters(ControllerContext controllerContext, IList`1 filters, ActionResult actionResult)
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<>c__DisplayClass2b.<BeginInvokeAction>b__1c()
   在 System.Web.Mvc.Async.AsyncControllerActionInvoker.<>c__DisplayClass21.<BeginInvokeAction>b__1e(IAsyncResult asyncResult)
DEBUG 2018-01-30 14:54:38,114 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 93be5b7d-8ede-43ac-ab9d-26296eed46fe
DEBUG 2018-01-30 14:54:42,874 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ac3c8adc-6be6-4a41-90b0-7ac8c9c0b1b9","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:54:42.8737582Z","Properties":{}}
DEBUG 2018-01-30 14:54:42,929 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ac3c8adc-6be6-4a41-90b0-7ac8c9c0b1b9
DEBUG 2018-01-30 14:54:44,845 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ac3c8adc-6be6-4a41-90b0-7ac8c9c0b1b9
DEBUG 2018-01-30 14:54:46,779 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"e8ed5685-ead3-4355-9235-842131efdca1","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:54:46.7799816Z","Properties":{}}
DEBUG 2018-01-30 14:54:46,869 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: e8ed5685-ead3-4355-9235-842131efdca1
DEBUG 2018-01-30 14:54:48,111 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: e8ed5685-ead3-4355-9235-842131efdca1
DEBUG 2018-01-30 14:54:50,233 [13   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"cd915590-3f5e-48ee-bddb-0c4b8bcaffc6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:54:50.2331792Z","Properties":{}}
DEBUG 2018-01-30 14:54:50,310 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: cd915590-3f5e-48ee-bddb-0c4b8bcaffc6
DEBUG 2018-01-30 14:54:51,872 [23   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: cd915590-3f5e-48ee-bddb-0c4b8bcaffc6
DEBUG 2018-01-30 14:54:54,137 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:54:54.1374025Z","Properties":{}}
DEBUG 2018-01-30 14:54:54,452 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: ac98911a-94c8-4406-ae41-fa4d52b065b8
DEBUG 2018-01-30 14:55:55,606 [23   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:55:55,607 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:55:55,609 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:55:55,609 [23   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:56:28,562 [25   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:56:28,580 [25   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:56:28,589 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,591 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,592 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,592 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,592 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,592 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,592 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,593 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,593 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,593 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,593 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,594 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,595 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,595 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,595 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,595 [25   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:28,599 [25   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:56:28,843 [25   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:56:28,843 [25   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:56:28,843 [25   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:56:28,843 [25   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:56:29,313 [25   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:56:31,356 [25   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:56:31,362 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:56:31,364 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:56:31,372 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:56:31,386 [25   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:56:31,441 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:56:32,208 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:56:32,369 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:56:32,369 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:56:32,373 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:56:32,373 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:56:32,374 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:56:32,375 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:56:32,376 [25   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:56:32,913 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:56:32,933 [25   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:56:32,945 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:56:32,946 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:56:32,947 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:56:32,948 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:56:32,950 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:56:32,951 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:56:32,952 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:56:32,953 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:56:32,954 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:56:32,956 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:56:32,957 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:56:32,958 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:56:32,959 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:56:32,960 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:56:32,962 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:56:32,963 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:56:32,964 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:56:32,965 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:56:32,966 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:56:32,968 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:56:32,969 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:56:32,971 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:56:32,972 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:56:32,973 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:56:32,974 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:56:32,976 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:56:32,977 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:56:32,978 [25   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 14:56:38,511 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:38.4973715Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,585 [3    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8633353Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,588 [12   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8693356Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,589 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8743359Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,596 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8793362Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,596 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8793362Z","Properties":{}}
DEBUG 2018-01-30 14:56:39,597 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ac98911a-94c8-4406-ae41-fa4d52b065b8","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:56:37.8793362Z","Properties":{}}
DEBUG 2018-01-30 14:57:13,036 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: ac98911a-94c8-4406-ae41-fa4d52b065b8
DEBUG 2018-01-30 14:58:09,421 [29   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 14:58:09,422 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:58:09,423 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:58:09,423 [29   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 14:58:47,680 [16   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 14:58:47,697 [16   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 14:58:47,706 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,708 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,708 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,708 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,708 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,708 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,709 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,709 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,709 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,709 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,710 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,711 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,711 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,711 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,712 [16   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:47,715 [16   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 14:58:47,959 [16   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:58:47,959 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:58:47,959 [16   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:58:47,959 [16   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 14:58:48,457 [16   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 14:58:50,479 [16   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 14:58:50,512 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 14:58:50,514 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 14:58:50,523 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 14:58:50,537 [16   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 14:58:50,590 [16   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 14:58:51,279 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:58:51,419 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 14:58:51,419 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 14:58:51,423 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 14:58:51,424 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 14:58:51,425 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 14:58:51,426 [16   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 14:58:51,846 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:58:51,866 [16   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 14:58:51,879 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 14:58:51,880 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 14:58:51,881 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 14:58:51,882 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 14:58:51,884 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 14:58:51,885 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 14:58:51,886 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 14:58:51,887 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 14:58:51,888 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 14:58:51,890 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 14:58:51,891 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 14:58:51,892 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 14:58:51,893 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 14:58:51,894 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 14:58:51,895 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 14:58:51,897 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 14:58:51,898 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 14:58:51,899 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 14:58:51,900 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 14:58:51,901 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 14:58:51,902 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 14:58:51,904 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 14:58:51,905 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 14:58:51,906 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 14:58:51,907 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 14:58:51,908 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 14:58:51,910 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 14:58:51,911 [16   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 14:58:56,051 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:56.0362383Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,318 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9212317Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,321 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9222318Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,322 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9222318Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,324 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9222318Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,336 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9222318Z","Properties":{}}
DEBUG 2018-01-30 14:58:56,341 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"5cd2076a-92c2-4463-98c7-9a0bcbc884a2","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T06:58:55.9222318Z","Properties":{}}
DEBUG 2018-01-30 14:59:35,847 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 5cd2076a-92c2-4463-98c7-9a0bcbc884a2
DEBUG 2018-01-30 15:05:16,640 [20   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 15:05:16,641 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:05:16,642 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:05:16,642 [20   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 15:05:57,768 [17   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 15:05:57,787 [17   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 15:05:57,796 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,798 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,798 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,798 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,799 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,800 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,800 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,800 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,800 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,801 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,802 [17   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:05:57,805 [17   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 15:05:58,097 [17   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:05:58,097 [17   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:05:58,097 [17   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:05:58,097 [17   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:05:58,651 [17   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:06:00,749 [17   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 15:06:00,756 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 15:06:00,757 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 15:06:00,767 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 15:06:00,842 [17   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 15:06:00,900 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:06:01,634 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:06:01,772 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 15:06:01,772 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 15:06:01,776 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 15:06:01,777 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 15:06:01,778 [17   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 15:06:02,208 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:06:02,229 [17   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:06:02,243 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 15:06:02,244 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 15:06:02,245 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 15:06:02,247 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 15:06:02,248 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 15:06:02,249 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 15:06:02,250 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 15:06:02,251 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 15:06:02,252 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 15:06:02,254 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 15:06:02,255 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 15:06:02,256 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 15:06:02,257 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 15:06:02,258 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 15:06:02,259 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 15:06:02,261 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 15:06:02,262 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 15:06:02,263 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 15:06:02,264 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 15:06:02,266 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 15:06:02,267 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 15:06:02,268 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 15:06:02,269 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 15:06:02,271 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 15:06:02,272 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 15:06:02,273 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 15:06:02,275 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 15:06:02,276 [17   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 15:06:06,732 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2f702b03-744f-4314-84dc-1a20b0f62343","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.7178719Z","Properties":{}}
DEBUG 2018-01-30 15:06:07,678 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.6258666Z","Properties":{}}
DEBUG 2018-01-30 15:06:07,678 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.6258666Z","Properties":{}}
DEBUG 2018-01-30 15:06:07,681 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.6258666Z","Properties":{}}
DEBUG 2018-01-30 15:06:07,684 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.6258666Z","Properties":{}}
DEBUG 2018-01-30 15:06:07,692 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:06.6258666Z","Properties":{}}
DEBUG 2018-01-30 15:06:22,540 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"d3fdd04f-caf0-4ed0-af0a-ef0481a17602","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:06:22.5407769Z","Properties":{}}
DEBUG 2018-01-30 15:06:22,602 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: d3fdd04f-caf0-4ed0-af0a-ef0481a17602
DEBUG 2018-01-30 15:06:46,416 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: a62dd5e0-2b54-46c0-bcb6-d4ccefffbfe4
DEBUG 2018-01-30 15:07:29,640 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: d3fdd04f-caf0-4ed0-af0a-ef0481a17602
DEBUG 2018-01-30 15:07:31,308 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"5b8b0985-901c-438f-8270-4a3b02152818","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:07:31.3087102Z","Properties":{}}
DEBUG 2018-01-30 15:07:31,321 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: 5b8b0985-901c-438f-8270-4a3b02152818
DEBUG 2018-01-30 15:13:19,270 [19   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 15:13:19,272 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:13:19,272 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:13:19,272 [19   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 15:13:23,774 [9    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 15:13:25,256 [9    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 15:13:25,289 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,310 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,310 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,310 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,321 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,321 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,321 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,321 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,322 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,324 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,325 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,325 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,325 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,326 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,326 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,326 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,326 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,326 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,327 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,337 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,340 [9    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:25,359 [9    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 15:13:26,652 [9    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:13:26,652 [9    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:13:26,652 [9    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:13:26,652 [9    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:13:27,618 [9    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:13:29,117 [9    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 15:13:29,125 [9    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 15:13:29,126 [9    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 15:13:29,159 [9    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 15:13:29,173 [9    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 15:13:29,227 [9    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:13:30,120 [9    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:13:30,285 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 15:13:30,285 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 15:13:30,292 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 15:13:30,293 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 15:13:30,294 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 15:13:30,295 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 15:13:30,296 [9    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 15:13:30,931 [9    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:13:30,951 [9    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:13:30,966 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 15:13:30,968 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 15:13:30,969 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 15:13:30,970 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 15:13:30,973 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 15:13:30,975 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 15:13:30,976 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 15:13:30,977 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 15:13:30,978 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 15:13:30,982 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 15:13:30,984 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 15:13:30,985 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 15:13:30,987 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 15:13:30,989 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 15:13:30,991 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 15:13:30,992 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 15:13:30,993 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 15:13:30,995 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 15:13:30,996 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 15:13:30,997 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 15:13:30,998 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 15:13:30,999 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 15:13:31,001 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 15:13:31,002 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 15:13:31,003 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 15:13:31,005 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 15:13:31,006 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 15:13:31,008 [9    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 15:14:35,172 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---> System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<Open>b__36(DbConnection t, DbConnectionInterceptionContext c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.Open(DbConnection connection, DbInterceptionContext interceptionContext)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass33.<UsingConnection>b__32()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.CreateDatabaseFromScript(Nullable`1 commandTimeout, DbConnection sqlConnection, String createDatabaseScript)
   在 System.Data.Entity.SqlServer.SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Common.DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Objects.ObjectContext.CreateDatabase()
   在 System.Data.Entity.Migrations.Utilities.DatabaseCreator.Create(DbConnection connection)
   在 System.Data.Entity.Migrations.DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)
   在 System.Data.Entity.Migrations.DbMigrator.Update(String targetMigration)
   在 System.Data.Entity.Internal.DatabaseCreator.CreateDatabase(InternalContext internalContext, Func`3 createMigrator, ObjectContext objectContext)
   在 System.Data.Entity.Internal.InternalContext.CreateDatabase(ObjectContext objectContext, DatabaseExistenceState existenceState)
   在 System.Data.Entity.Database.Create(DatabaseExistenceState existenceState)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: Named Pipes Provider, error: 40 - 无法打开到 SQL Server 的连接) ---> System.ComponentModel.Win32Exception: 系统找不到指定的文件。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<Open>b__36(DbConnection t, DbConnectionInterceptionContext c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.Open(DbConnection connection, DbInterceptionContext interceptionContext)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass33.<UsingConnection>b__32()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.CreateDatabaseFromScript(Nullable`1 commandTimeout, DbConnection sqlConnection, String createDatabaseScript)
   在 System.Data.Entity.SqlServer.SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Common.DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Objects.ObjectContext.CreateDatabase()
   在 System.Data.Entity.Migrations.Utilities.DatabaseCreator.Create(DbConnection connection)
   在 System.Data.Entity.Migrations.DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)
   在 System.Data.Entity.Migrations.DbMigrator.Update(String targetMigration)
   在 System.Data.Entity.Internal.DatabaseCreator.CreateDatabase(InternalContext internalContext, Func`3 createMigrator, ObjectContext objectContext)
   在 System.Data.Entity.Internal.InternalContext.CreateDatabase(ObjectContext objectContext, DatabaseExistenceState existenceState)
   在 System.Data.Entity.Database.Create(DatabaseExistenceState existenceState)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 15:45:28,629 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 15:45:28,649 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 15:45:28,656 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,659 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,659 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,659 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,659 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,659 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,660 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,661 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,662 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:28,668 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 15:45:29,002 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:45:29,002 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:45:29,002 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:45:29,002 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:45:29,489 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:45:32,219 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 15:45:32,244 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 15:45:32,246 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 15:45:32,255 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 15:45:32,274 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 15:45:32,326 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:45:33,032 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:45:33,181 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 15:45:33,181 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 15:45:33,185 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 15:45:33,186 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 15:45:33,187 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 15:45:33,188 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 15:45:33,710 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:45:33,732 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:45:33,745 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 15:45:33,746 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 15:45:33,747 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 15:45:33,748 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 15:45:33,749 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 15:45:33,751 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 15:45:33,752 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 15:45:33,753 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 15:45:33,754 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 15:45:33,755 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 15:45:33,756 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 15:45:33,757 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 15:45:33,758 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 15:45:33,760 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 15:45:33,761 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 15:45:33,762 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 15:45:33,763 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 15:45:33,764 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 15:45:33,766 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 15:45:33,767 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 15:45:33,768 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 15:45:33,769 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 15:45:33,770 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 15:45:33,772 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 15:45:33,773 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 15:45:33,774 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 15:45:33,775 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 15:45:33,776 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 15:45:39,640 [9    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"f1bd2541-f3cd-4ca1-8dc1-26816cdf604d","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:45:39.6055933Z","Properties":{}}
DEBUG 2018-01-30 15:45:43,234 [5    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"2c5f43a8-f020-475a-9756-c88ca2e9f8f5","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T07:45:43.2348009Z","Properties":{}}
DEBUG 2018-01-30 15:58:37,367 [30   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 15:58:37,370 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:58:37,371 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:58:37,371 [30   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 15:58:41,479 [29   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 15:58:42,207 [29   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 15:58:42,216 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,218 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,218 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,218 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,218 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,219 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,219 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,219 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,219 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,219 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,220 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,220 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,220 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,221 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,221 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,221 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,221 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,221 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,222 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,222 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,222 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:42,226 [29   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
FATAL 2018-01-30 15:58:42,618 [29   ] Abp.AbpBootstrapper                      - System.TypeInitializationException: “System.Data.Entity.CreateDatabaseIfNotExists`1”的类型初始值设定项引发异常。 ---> System.TypeInitializationException: “System.Data.Entity.Internal.AppConfig”的类型初始值设定项引发异常。 ---> System.Configuration.ConfigurationErrorsException: 项“Default”已添加。 (D:\代码\YiHanCms\src\YiHan.Cms.Web\web.config line 60)
   在 System.Configuration.BaseConfigurationRecord.EvaluateOne(String[] keys, SectionInput input, Boolean isTrusted, FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult)
   在 System.Configuration.BaseConfigurationRecord.Evaluate(FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult, Boolean getLkg, Boolean getRuntimeObject, Object& result, Object& resultRuntimeObject)
   在 System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)
   在 System.Configuration.BaseConfigurationRecord.GetSection(String configKey)
   在 System.Web.HttpContext.GetSection(String sectionName)
   在 System.Web.Configuration.HttpConfigurationSystem.GetSection(String sectionName)
   在 System.Web.Configuration.HttpConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String configKey)
   在 System.Configuration.ConfigurationManager.get_ConnectionStrings()
   在 System.Data.Entity.Internal.AppConfig..ctor()
   在 System.Data.Entity.Internal.AppConfig..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.Internal.AppConfig.get_DefaultInstance()
   在 System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationManager.EnsureLoadedForAssembly(Assembly assemblyHint, Type contextTypeHint)
   在 System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationManager.EnsureLoadedForContext(Type contextType)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.CreateDatabaseIfNotExists`1..ctor()
   在 YiHan.Cms.CmsDataModule.PreInitialize() 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\CmsDataModule.cs:行号 17
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_0(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
System.TypeInitializationException: “System.Data.Entity.CreateDatabaseIfNotExists`1”的类型初始值设定项引发异常。 ---> System.TypeInitializationException: “System.Data.Entity.Internal.AppConfig”的类型初始值设定项引发异常。 ---> System.Configuration.ConfigurationErrorsException: 项“Default”已添加。 (D:\代码\YiHanCms\src\YiHan.Cms.Web\web.config line 60)
   在 System.Configuration.BaseConfigurationRecord.EvaluateOne(String[] keys, SectionInput input, Boolean isTrusted, FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult)
   在 System.Configuration.BaseConfigurationRecord.Evaluate(FactoryRecord factoryRecord, SectionRecord sectionRecord, Object parentResult, Boolean getLkg, Boolean getRuntimeObject, Object& result, Object& resultRuntimeObject)
   在 System.Configuration.BaseConfigurationRecord.GetSectionRecursive(String configKey, Boolean getLkg, Boolean checkPermission, Boolean getRuntimeObject, Boolean requestIsHere, Object& result, Object& resultRuntimeObject)
   在 System.Configuration.BaseConfigurationRecord.GetSection(String configKey)
   在 System.Web.HttpContext.GetSection(String sectionName)
   在 System.Web.Configuration.HttpConfigurationSystem.GetSection(String sectionName)
   在 System.Web.Configuration.HttpConfigurationSystem.System.Configuration.Internal.IInternalConfigSystem.GetSection(String configKey)
   在 System.Configuration.ConfigurationManager.get_ConnectionStrings()
   在 System.Data.Entity.Internal.AppConfig..ctor()
   在 System.Data.Entity.Internal.AppConfig..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.Internal.AppConfig.get_DefaultInstance()
   在 System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationManager.EnsureLoadedForAssembly(Assembly assemblyHint, Type contextTypeHint)
   在 System.Data.Entity.Infrastructure.DependencyResolution.DbConfigurationManager.EnsureLoadedForContext(Type contextType)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1..cctor()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.CreateDatabaseIfNotExists`1..ctor()
   在 YiHan.Cms.CmsDataModule.PreInitialize() 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\CmsDataModule.cs:行号 17
   在 Abp.Modules.AbpModuleManager.<>c.<StartModules>b__15_0(AbpModuleInfo module)
   在 System.Collections.Generic.List`1.ForEach(Action`1 action)
   在 Abp.Modules.AbpModuleManager.StartModules()
   在 Abp.AbpBootstrapper.Initialize()
DEBUG 2018-01-30 15:58:43,288 [28   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 15:58:46,099 [29   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 15:58:46,953 [29   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 15:58:46,963 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,970 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,970 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,970 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,970 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,970 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,971 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,971 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,971 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,971 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,972 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,972 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,972 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,972 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,973 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,973 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,973 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,973 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,973 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,975 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,975 [29   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:46,981 [29   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 15:58:47,675 [29   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:58:47,675 [29   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:58:47,675 [29   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:58:47,675 [29   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 15:58:48,287 [29   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 15:58:49,802 [29   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 15:58:49,810 [29   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 15:58:49,811 [29   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 15:58:49,820 [29   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 15:58:49,865 [29   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 15:58:49,920 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:58:50,698 [29   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:58:50,880 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 15:58:50,880 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 15:58:50,885 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 15:58:50,886 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 15:58:50,887 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 15:58:50,888 [29   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 15:58:51,492 [29   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:58:51,523 [29   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 15:58:51,535 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 15:58:51,537 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 15:58:51,538 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 15:58:51,540 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 15:58:51,541 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 15:58:51,546 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 15:58:51,552 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 15:58:51,553 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 15:58:51,555 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 15:58:51,556 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 15:58:51,557 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 15:58:51,558 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 15:58:51,564 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 15:58:51,565 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 15:58:51,566 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 15:58:51,568 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 15:58:51,569 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 15:58:51,570 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 15:58:51,572 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 15:58:51,573 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 15:58:51,574 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 15:58:51,575 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 15:58:51,577 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 15:58:51,578 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 15:58:51,580 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 15:58:51,581 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 15:58:51,582 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 15:58:51,584 [29   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 15:58:55,594 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:00,810 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:05,815 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:10,929 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:15,940 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:20,944 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:25,955 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 15:59:30,471 [31   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 15:59:30,472 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:59:30,472 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 15:59:30,472 [31   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
WARN  2018-01-30 15:59:31,338 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:36,342 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:41,353 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:46,360 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:51,366 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 15:59:56,378 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:01,382 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:06,387 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:11,402 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:16,405 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:21,415 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:26,427 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:31,428 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:36,434 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:41,446 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:46,449 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:51,461 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:00:56,469 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:01,474 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:06,482 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:11,489 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:16,502 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:21,508 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:26,514 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:31,519 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:36,531 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:41,544 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:46,540 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:51,574 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:01:56,573 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:01,584 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:06,592 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:11,600 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:16,605 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:21,611 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:26,619 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:31,628 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 16:02:36,638 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.ArgumentException: 不支持关键字: “localhost; database”。
   在 System.Data.Common.DbConnectionOptions.ParseInternal(Hashtable parsetable, String connectionString, Boolean buildChain, Hashtable synonyms, Boolean firstKey)
   在 System.Data.Common.DbConnectionOptions..ctor(String connectionString, Hashtable synonyms, Boolean useOdbcRules)
   在 System.Data.SqlClient.SqlConnectionString..ctor(String connectionString)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnectionOptions(String connectionString, DbConnectionOptions previous)
   在 System.Data.ProviderBase.DbConnectionFactory.GetConnectionPoolGroup(DbConnectionPoolKey key, DbConnectionPoolGroupOptions poolOptions, DbConnectionOptions& userConnectionOptions)
   在 System.Data.SqlClient.SqlConnection.ConnectionString_Set(DbConnectionPoolKey key)
   在 System.Data.SqlClient.SqlConnection.set_ConnectionString(String value)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<SetConnectionString>b__18(DbConnection t, DbConnectionPropertyInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.SetConnectionString(DbConnection connection, DbConnectionPropertyInterceptionContext`1 interceptionContext)
   在 System.Data.Entity.Internal.LazyInternalConnection.InitializeFromConnectionStringSetting(ConnectionStringSettings appConfigConnection)
   在 System.Data.Entity.Internal.LazyInternalConnection.TryInitializeFromAppConfig(String name, AppConfig config)
   在 System.Data.Entity.Internal.LazyInternalConnection.Initialize()
   在 System.Data.Entity.Internal.LazyInternalConnection.get_ProviderName()
   在 System.Data.Entity.Internal.LazyInternalContext.get_ProviderName()
   在 System.Data.Entity.Internal.DefaultModelCacheKeyFactory.Create(DbContext context)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeContext()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\aspnet-zero-4.6.1\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 43
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 16:40:06,265 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 16:40:06,284 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 16:40:06,293 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,295 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,295 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,296 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,298 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,298 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,298 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,298 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,299 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,300 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,300 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:06,304 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 16:40:06,740 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:40:06,740 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:40:06,740 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:40:06,740 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:40:07,391 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:40:10,574 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 16:40:10,610 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 16:40:10,612 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 16:40:10,626 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 16:40:10,655 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 16:40:10,731 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 16:40:11,729 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:40:11,974 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 16:40:11,974 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 16:40:11,979 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 16:40:11,980 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 16:40:11,981 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 16:40:11,982 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 16:40:11,982 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 16:40:11,982 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 16:40:11,982 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 16:40:12,488 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:40:12,508 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:40:12,519 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 16:40:12,521 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 16:40:12,522 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 16:40:12,523 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 16:40:12,524 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 16:40:12,525 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 16:40:12,526 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 16:40:12,527 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 16:40:12,528 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 16:40:12,529 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 16:40:12,531 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 16:40:12,532 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 16:40:12,533 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 16:40:12,534 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 16:40:12,535 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 16:40:12,536 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 16:40:12,538 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 16:40:12,539 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 16:40:12,540 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 16:40:12,541 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 16:40:12,542 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 16:40:12,543 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 16:40:12,544 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 16:40:12,545 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 16:40:12,547 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 16:40:12,548 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 16:40:12,549 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 16:40:12,550 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 16:40:19,534 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c41ede4e-7fda-4193-b031-ea984d2ed53e","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:40:19.5101931Z","Properties":{}}
DEBUG 2018-01-30 16:40:19,610 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"12384b3d-bd25-4083-bd79-2e8d109e5325","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:40:19.6101988Z","Properties":{}}
DEBUG 2018-01-30 16:40:41,948 [11   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c41ede4e-7fda-4193-b031-ea984d2ed53e
DEBUG 2018-01-30 16:40:53,902 [7    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: 12384b3d-bd25-4083-bd79-2e8d109e5325
DEBUG 2018-01-30 16:40:56,911 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:40:56.9113323Z","Properties":{}}
DEBUG 2018-01-30 16:40:57,044 [15   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is registered: aacceb4f-547c-46dc-922d-609c977022e6
DEBUG 2018-01-30 16:43:07,614 [6    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 16:43:07,615 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 16:43:07,616 [6    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 16:43:07,616 [6    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 16:43:10,838 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 16:43:11,550 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 16:43:11,558 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,565 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,565 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,566 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,566 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,566 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,566 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,566 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,567 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,567 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,567 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,568 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,568 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,568 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,568 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,568 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,569 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,569 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,569 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,569 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,569 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:11,573 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 16:43:12,400 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:43:12,401 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:43:12,401 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:43:12,401 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 16:43:13,069 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 16:43:14,703 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 16:43:14,710 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 16:43:14,711 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 16:43:14,719 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 16:43:14,733 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 16:43:14,786 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 16:43:15,535 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:43:15,692 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 16:43:15,692 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 16:43:15,696 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 16:43:15,697 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 16:43:15,698 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 16:43:15,699 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 16:43:16,172 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:43:16,194 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 16:43:16,206 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 16:43:16,208 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 16:43:16,209 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 16:43:16,210 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 16:43:16,212 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 16:43:16,213 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 16:43:16,214 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 16:43:16,215 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 16:43:16,217 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 16:43:16,219 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 16:43:16,220 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 16:43:16,221 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 16:43:16,223 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 16:43:16,224 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 16:43:16,225 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 16:43:16,226 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 16:43:16,228 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 16:43:16,229 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 16:43:16,230 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 16:43:16,231 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 16:43:16,233 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 16:43:16,235 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 16:43:16,236 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 16:43:16,237 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 16:43:16,239 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 16:43:16,240 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 16:43:16,241 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 16:43:16,242 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 16:43:26,748 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:43:25.7818472Z","Properties":{}}
DEBUG 2018-01-30 16:43:26,762 [6    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:43:25.7818472Z","Properties":{}}
DEBUG 2018-01-30 16:43:26,767 [21   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:43:25.7828473Z","Properties":{}}
DEBUG 2018-01-30 16:43:29,150 [16   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T08:43:25.7828473Z","Properties":{}}
DEBUG 2018-01-30 17:07:19,513 [19   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:07:19,514 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:07:19,514 [19   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:07:19,514 [19   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:07:49,177 [21   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:07:49,194 [21   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:07:49,223 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,228 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,228 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,228 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,228 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,230 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,230 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,231 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,231 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,231 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,231 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,232 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,233 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,233 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,233 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,233 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:49,237 [21   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:07:49,565 [21   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:07:49,565 [21   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:07:49,565 [21   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:07:49,565 [21   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:07:50,026 [21   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:07:51,982 [21   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:07:51,989 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:07:51,990 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:07:52,000 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:07:52,054 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:07:52,105 [21   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:07:52,782 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:07:52,914 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:07:52,915 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:07:52,918 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:07:52,919 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:07:52,920 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:07:52,921 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:07:52,921 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:07:52,921 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:07:52,921 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:07:52,921 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:07:53,343 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:07:53,363 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:07:53,375 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:07:53,376 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:07:53,377 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:07:53,378 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:07:53,379 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:07:53,381 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:07:53,382 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:07:53,384 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:07:53,385 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:07:53,386 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:07:53,388 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:07:53,389 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:07:53,390 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:07:53,391 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:07:53,392 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:07:53,393 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:07:53,394 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:07:53,396 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:07:53,397 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:07:53,398 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:07:53,399 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:07:53,400 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:07:53,401 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:07:53,403 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:07:53,404 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:07:53,405 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:07:53,406 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:07:53,407 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:07:57,891 [19   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:57.4850238Z","Properties":{}}
DEBUG 2018-01-30 17:07:57,898 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:57.4850238Z","Properties":{}}
DEBUG 2018-01-30 17:07:57,899 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:57.4860239Z","Properties":{}}
DEBUG 2018-01-30 17:07:57,899 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:57.4860239Z","Properties":{}}
DEBUG 2018-01-30 17:07:57,904 [3    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"aacceb4f-547c-46dc-922d-609c977022e6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:57.4890241Z","Properties":{}}
DEBUG 2018-01-30 17:07:59,237 [18   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ea930675-ed08-43ec-bb62-d4f64f2924d6","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:07:59.237124Z","Properties":{}}
DEBUG 2018-01-30 17:08:32,461 [14   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: aacceb4f-547c-46dc-922d-609c977022e6
DEBUG 2018-01-30 17:25:55,559 [3    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:25:55,560 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:25:55,569 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:25:55,569 [3    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:25:59,663 [23   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:26:00,667 [23   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:26:00,676 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,678 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,678 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,678 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,679 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,679 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,679 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,679 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,679 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,680 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,680 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,680 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,680 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,681 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,681 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,681 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,681 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,681 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,682 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,682 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,682 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:00,686 [23   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:26:01,436 [23   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:26:01,436 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:26:01,436 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:26:01,436 [23   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:26:02,220 [23   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:26:03,896 [23   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:26:03,903 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:26:03,904 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:26:03,912 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:26:03,927 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:26:03,991 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:26:04,775 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:26:04,931 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:26:04,931 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:26:04,937 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:26:04,938 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:26:04,939 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:26:04,940 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:26:05,417 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:26:05,438 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:26:05,455 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:26:05,457 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:26:05,458 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:26:05,459 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:26:05,461 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:26:05,462 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:26:05,463 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:26:05,465 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:26:05,466 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:26:05,467 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:26:05,468 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:26:05,470 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:26:05,471 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:26:05,472 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:26:05,473 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:26:05,475 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:26:05,476 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:26:05,477 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:26:05,478 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:26:05,480 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:26:05,481 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:26:05,482 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:26:05,487 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:26:05,489 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:26:05,490 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:26:05,491 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:26:05,493 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:26:05,494 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 17:26:21,972 [18   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.Data.SqlClient.SqlException: 在多语句事务内不允许使用 CREATE DATABASE 语句。
   在 System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   在 System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(String methodName, Boolean async, Int32 timeout, Boolean asyncWrite)
   在 System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean asyncWrite)
   在 System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   在 System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.<NonQuery>b__0(DbCommand t, DbCommandInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.NonQuery(DbCommand command, DbCommandInterceptionContext interceptionContext)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass1a.<CreateDatabaseFromScript>b__19(DbConnection conn)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass33.<UsingConnection>b__32()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.CreateDatabaseFromScript(Nullable`1 commandTimeout, DbConnection sqlConnection, String createDatabaseScript)
   在 System.Data.Entity.SqlServer.SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Common.DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Objects.ObjectContext.CreateDatabase()
   在 System.Data.Entity.Migrations.Utilities.DatabaseCreator.Create(DbConnection connection)
   在 System.Data.Entity.Migrations.DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)
   在 System.Data.Entity.Migrations.DbMigrator.Update(String targetMigration)
   在 System.Data.Entity.Internal.DatabaseCreator.CreateDatabase(InternalContext internalContext, Func`3 createMigrator, ObjectContext objectContext)
   在 System.Data.Entity.Internal.InternalContext.CreateDatabase(ObjectContext objectContext, DatabaseExistenceState existenceState)
   在 System.Data.Entity.Database.Create(DatabaseExistenceState existenceState)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.Data.SqlClient.SqlException: 在多语句事务内不允许使用 CREATE DATABASE 语句。
   在 System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction)
   在 System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose)
   在 System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady)
   在 System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(String methodName, Boolean async, Int32 timeout, Boolean asyncWrite)
   在 System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean asyncWrite)
   在 System.Data.SqlClient.SqlCommand.ExecuteNonQuery()
   在 System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.<NonQuery>b__0(DbCommand t, DbCommandInterceptionContext`1 c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext,TResult](TTarget target, Func`3 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbCommandDispatcher.NonQuery(DbCommand command, DbCommandInterceptionContext interceptionContext)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass1a.<CreateDatabaseFromScript>b__19(DbConnection conn)
   在 System.Data.Entity.SqlServer.SqlProviderServices.<>c__DisplayClass33.<UsingConnection>b__32()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.UsingMasterConnection(DbConnection sqlConnection, Action`1 act)
   在 System.Data.Entity.SqlServer.SqlProviderServices.CreateDatabaseFromScript(Nullable`1 commandTimeout, DbConnection sqlConnection, String createDatabaseScript)
   在 System.Data.Entity.SqlServer.SqlProviderServices.DbCreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Common.DbProviderServices.CreateDatabase(DbConnection connection, Nullable`1 commandTimeout, StoreItemCollection storeItemCollection)
   在 System.Data.Entity.Core.Objects.ObjectContext.CreateDatabase()
   在 System.Data.Entity.Migrations.Utilities.DatabaseCreator.Create(DbConnection connection)
   在 System.Data.Entity.Migrations.DbMigrator.EnsureDatabaseExists(Action mustSucceedToKeepDatabase)
   在 System.Data.Entity.Migrations.DbMigrator.Update(String targetMigration)
   在 System.Data.Entity.Internal.DatabaseCreator.CreateDatabase(InternalContext internalContext, Func`3 createMigrator, ObjectContext objectContext)
   在 System.Data.Entity.Internal.InternalContext.CreateDatabase(ObjectContext objectContext, DatabaseExistenceState existenceState)
   在 System.Data.Entity.Database.Create(DatabaseExistenceState existenceState)
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:26:29,464 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:26:35,025 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:26:40,442 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:26:46,147 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 17:26:48,279 [3    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:26:48,280 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:26:48,281 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:26:48,281 [3    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
WARN  2018-01-30 17:26:51,593 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:26:56,959 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:27:02,342 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:27:07,701 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:27:13,075 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:27:18,440 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 17:27:22,851 [3    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:27:22,852 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:27:22,853 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:27:22,853 [3    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:28:01,675 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:28:01,692 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:28:01,701 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,703 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,703 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,703 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,704 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,705 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,705 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,705 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,705 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,705 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,706 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,706 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,706 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,706 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,706 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,707 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:01,710 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:28:01,945 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:28:01,945 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:28:01,945 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:28:01,945 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:28:02,420 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:28:04,315 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:28:04,322 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:28:04,323 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:28:04,332 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:28:04,346 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:28:04,399 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:28:05,088 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:28:05,223 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:28:05,223 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:28:05,227 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:28:05,228 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:28:05,229 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:28:05,230 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:28:05,230 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:28:05,667 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:28:05,721 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:28:05,733 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:28:05,735 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:28:05,736 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:28:05,737 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:28:05,738 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:28:05,739 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:28:05,741 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:28:05,742 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:28:05,743 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:28:05,745 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:28:05,746 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:28:05,747 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:28:05,748 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:28:05,749 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:28:05,751 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:28:05,752 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:28:05,753 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:28:05,754 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:28:05,755 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:28:05,756 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:28:05,758 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:28:05,759 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:28:05,760 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:28:05,762 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:28:05,763 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:28:05,764 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:28:05,766 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:28:05,767 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:28:09,815 [3    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:28:09.7993642Z","Properties":{}}
DEBUG 2018-01-30 17:44:02,192 [3    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:44:02,193 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:44:02,194 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:44:02,194 [3    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:44:26,871 [21   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:44:26,888 [21   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:44:26,898 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,900 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,900 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,900 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,900 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,900 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,901 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,901 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,901 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,901 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,902 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,903 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,903 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,903 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,903 [21   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:26,907 [21   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:44:27,140 [21   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:44:27,140 [21   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:44:27,140 [21   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:44:27,140 [21   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:44:27,603 [21   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:44:29,638 [21   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:44:29,646 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:44:29,647 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:44:29,655 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:44:29,669 [21   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:44:29,722 [21   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:44:30,424 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:44:30,558 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:44:30,558 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:44:30,562 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:44:30,563 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:44:30,564 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:44:30,565 [21   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:44:30,994 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:44:31,015 [21   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:44:31,026 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:44:31,027 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:44:31,029 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:44:31,030 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:44:31,031 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:44:31,032 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:44:31,033 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:44:31,035 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:44:31,036 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:44:31,037 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:44:31,038 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:44:31,040 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:44:31,041 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:44:31,042 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:44:31,043 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:44:31,044 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:44:31,046 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:44:31,047 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:44:31,048 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:44:31,049 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:44:31,050 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:44:31,052 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:44:31,053 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:44:31,054 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:44:31,055 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:44:31,056 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:44:31,058 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:44:31,059 [21   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:44:37,571 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:35.9797705Z","Properties":{}}
DEBUG 2018-01-30 17:44:37,575 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:35.9797705Z","Properties":{}}
DEBUG 2018-01-30 17:44:37,583 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:35.9797705Z","Properties":{}}
DEBUG 2018-01-30 17:44:37,583 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:35.9797705Z","Properties":{}}
DEBUG 2018-01-30 17:44:37,585 [3    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"ba321907-01ed-47e9-bbe5-fbc9f6b64644","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:35.9797705Z","Properties":{}}
DEBUG 2018-01-30 17:44:41,297 [3    ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:44:41.2970747Z","Properties":{}}
DEBUG 2018-01-30 17:44:44,086 [3    ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:44:44,088 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:44:44,090 [3    ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:44:44,090 [3    ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:45:07,817 [20   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:45:07,834 [20   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:45:07,843 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,845 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,846 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,847 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,847 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,847 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,847 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,848 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,848 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,848 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,848 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,848 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,849 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,849 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,849 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,849 [20   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:07,853 [20   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:45:08,087 [20   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:45:08,087 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:45:08,087 [20   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:45:08,087 [20   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:45:08,538 [20   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:45:10,478 [20   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:45:10,485 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:45:10,486 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:45:10,494 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:45:10,511 [20   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:45:10,566 [20   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:45:11,275 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:45:11,412 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:45:11,412 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:45:11,415 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:45:11,415 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:45:11,415 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:45:11,415 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:45:11,416 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:45:11,417 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:45:11,418 [20   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:45:11,937 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:45:11,958 [20   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:45:11,970 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:45:11,971 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:45:11,973 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:45:11,974 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:45:11,975 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:45:11,976 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:45:11,977 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:45:11,979 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:45:11,980 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:45:11,981 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:45:11,982 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:45:11,983 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:45:11,984 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:45:11,986 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:45:11,987 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:45:11,988 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:45:11,989 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:45:11,990 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:45:11,992 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:45:11,993 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:45:11,994 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:45:11,995 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:45:11,997 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:45:11,998 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:45:11,999 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:45:12,001 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:45:12,002 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:45:12,003 [20   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:45:16,502 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
DEBUG 2018-01-30 17:45:16,514 [26   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
DEBUG 2018-01-30 17:45:16,515 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
DEBUG 2018-01-30 17:45:16,516 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
DEBUG 2018-01-30 17:45:16,520 [25   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
DEBUG 2018-01-30 17:45:19,223 [22   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:45:16.0860645Z","Properties":{}}
WARN  2018-01-30 17:45:36,664 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - System.Data.Entity.Core.EntityException: The underlying provider failed on Open. ---> System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: TCP Provider, error: 0 - 等待的操作过时。) ---> System.ComponentModel.Win32Exception: 等待的操作过时。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<Open>b__36(DbConnection t, DbConnectionInterceptionContext c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.Open(DbConnection connection, DbInterceptionContext interceptionContext)
   在 System.Data.Entity.Core.EntityClient.EntityConnection.<Open>b__2()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.Core.EntityClient.EntityConnection.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.Core.EntityClient.EntityConnection.Open()
   在 System.Data.Entity.Core.Objects.ObjectContext.EnsureConnection(Boolean shouldMonitorTransactions)
   在 System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.<>c__DisplayClass7.<GetResults>b__5()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.<System.Collections.Generic.IEnumerable<T>.GetEnumerator>b__0()
   在 System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()
   在 System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   在 System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
System.Data.Entity.Core.EntityException: The underlying provider failed on Open. ---> System.Data.SqlClient.SqlException: 在与 SQL Server 建立连接时出现与网络相关的或特定于实例的错误。未找到或无法访问服务器。请验证实例名称是否正确并且 SQL Server 已配置为允许远程连接。 (provider: TCP Provider, error: 0 - 等待的操作过时。) ---> System.ComponentModel.Win32Exception: 等待的操作过时。
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.SqlClient.SqlInternalConnectionTds..ctor(DbConnectionPoolIdentity identity, SqlConnectionString connectionOptions, SqlCredential credential, Object providerInfo, String newPassword, SecureString newSecurePassword, Boolean redirectedUserInstance, SqlConnectionString userConnectionOptions, SessionData reconnectSessionData, DbConnectionPool pool, String accessToken, Boolean applyTransientFaultHandling)
   在 System.Data.SqlClient.SqlConnectionFactory.CreateConnection(DbConnectionOptions options, DbConnectionPoolKey poolKey, Object poolGroupProviderInfo, DbConnectionPool pool, DbConnection owningConnection, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionFactory.CreatePooledConnection(DbConnectionPool pool, DbConnection owningObject, DbConnectionOptions options, DbConnectionPoolKey poolKey, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionPool.CreateObject(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.UserCreateRequest(DbConnection owningObject, DbConnectionOptions userOptions, DbConnectionInternal oldConnection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, UInt32 waitForMultipleObjectsTimeout, Boolean allowCreate, Boolean onlyOneCheckConnection, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionPool.TryGetConnection(DbConnection owningObject, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionFactory.TryGetConnection(DbConnection owningConnection, TaskCompletionSource`1 retry, DbConnectionOptions userOptions, DbConnectionInternal oldConnection, DbConnectionInternal& connection)
   在 System.Data.ProviderBase.DbConnectionInternal.TryOpenConnectionInternal(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.ProviderBase.DbConnectionClosed.TryOpenConnection(DbConnection outerConnection, DbConnectionFactory connectionFactory, TaskCompletionSource`1 retry, DbConnectionOptions userOptions)
   在 System.Data.SqlClient.SqlConnection.TryOpenInner(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.TryOpen(TaskCompletionSource`1 retry)
   在 System.Data.SqlClient.SqlConnection.Open()
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.<Open>b__36(DbConnection t, DbConnectionInterceptionContext c)
   在 System.Data.Entity.Infrastructure.Interception.InternalDispatcher`1.Dispatch[TTarget,TInterceptionContext](TTarget target, Action`2 operation, TInterceptionContext interceptionContext, Action`3 executing, Action`3 executed)
   在 System.Data.Entity.Infrastructure.Interception.DbConnectionDispatcher.Open(DbConnection connection, DbInterceptionContext interceptionContext)
   在 System.Data.Entity.Core.EntityClient.EntityConnection.<Open>b__2()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.<>c__DisplayClass1.<Execute>b__0()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute(Action operation)
   在 System.Data.Entity.Core.EntityClient.EntityConnection.Open()
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.Data.Entity.Core.EntityClient.EntityConnection.Open()
   在 System.Data.Entity.Core.Objects.ObjectContext.EnsureConnection(Boolean shouldMonitorTransactions)
   在 System.Data.Entity.Core.Objects.ObjectContext.ExecuteInTransaction[T](Func`1 func, IDbExecutionStrategy executionStrategy, Boolean startLocalTransaction, Boolean releaseConnectionOnSuccess)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.<>c__DisplayClass7.<GetResults>b__5()
   在 System.Data.Entity.SqlServer.DefaultSqlExecutionStrategy.Execute[TResult](Func`1 operation)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.GetResults(Nullable`1 forMergeOption)
   在 System.Data.Entity.Core.Objects.ObjectQuery`1.<System.Collections.Generic.IEnumerable<T>.GetEnumerator>b__0()
   在 System.Data.Entity.Internal.LazyEnumerator`1.MoveNext()
   在 System.Collections.Generic.List`1..ctor(IEnumerable`1 collection)
   在 System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 17:46:17,391 [27   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:46:17,392 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:46:17,393 [27   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:46:17,393 [27   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:46:43,580 [31   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:46:43,596 [31   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:46:43,606 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,608 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,609 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,609 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,609 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,609 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,610 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,611 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,611 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,611 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,611 [31   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:43,615 [31   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:46:43,848 [31   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:46:43,848 [31   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:46:43,848 [31   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:46:43,848 [31   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:46:44,305 [31   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:46:46,766 [31   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:46:46,773 [31   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:46:46,774 [31   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:46:46,784 [31   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:46:46,878 [31   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:46:46,963 [31   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:46:48,063 [31   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:46:48,332 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:46:48,332 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:46:48,336 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:46:48,336 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:46:48,336 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:46:48,337 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:46:48,338 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:46:48,339 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:46:48,339 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:46:48,339 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:46:48,340 [31   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:46:48,825 [31   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:46:48,848 [31   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:46:48,864 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:46:48,865 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:46:48,866 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:46:48,868 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:46:48,869 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:46:48,870 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:46:48,872 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:46:48,873 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:46:48,875 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:46:48,876 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:46:48,877 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:46:48,879 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:46:48,880 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:46:48,882 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:46:48,883 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:46:48,884 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:46:48,886 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:46:48,887 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:46:48,889 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:46:48,891 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:46:48,892 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:46:48,894 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:46:48,895 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:46:48,896 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:46:48,898 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:46:48,899 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:46:48,901 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:46:48,902 [31   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:46:54,382 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:53.9056594Z","Properties":{}}
DEBUG 2018-01-30 17:46:54,382 [27   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:53.9056594Z","Properties":{}}
DEBUG 2018-01-30 17:46:54,409 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:53.9056594Z","Properties":{}}
DEBUG 2018-01-30 17:46:54,422 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is reconnected: {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:53.9056594Z","Properties":{}}
DEBUG 2018-01-30 17:46:54,422 [24   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected (on reconnected event): {"ConnectionId":"c24b516e-6daf-4aad-80d8-432996d8ff51","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:53.9056594Z","Properties":{}}
DEBUG 2018-01-30 17:46:55,294 [29   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"da52148e-bf9d-431a-b66b-e9f97f119b16","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:46:55.2947389Z","Properties":{}}
DEBUG 2018-01-30 17:47:28,888 [28   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is disconnected: c24b516e-6daf-4aad-80d8-432996d8ff51
DEBUG 2018-01-30 17:47:44,779 [17   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:47:44,780 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:47:44,782 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:47:44,782 [17   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:48:11,326 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:48:11,363 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:48:11,383 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,387 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,388 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,388 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,388 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,388 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,388 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,389 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,389 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,389 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,389 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,390 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,390 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,390 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,390 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,390 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,391 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,391 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,391 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,391 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,391 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:11,408 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:48:11,830 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:48:11,830 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:48:11,830 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:48:11,830 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:48:12,317 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:48:14,316 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:48:14,322 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:48:14,324 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:48:14,333 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:48:14,350 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:48:14,406 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:48:15,200 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:48:15,336 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:48:15,337 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:48:15,340 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:48:15,340 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:48:15,340 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:48:15,340 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:48:15,340 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:48:15,341 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:48:15,342 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:48:15,343 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:48:15,831 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:48:15,852 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:48:15,864 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:48:15,865 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:48:15,866 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:48:15,867 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:48:15,869 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:48:15,870 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:48:15,872 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:48:15,873 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:48:15,874 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:48:15,875 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:48:15,876 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:48:15,877 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:48:15,879 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:48:15,880 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:48:15,881 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:48:15,882 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:48:15,883 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:48:15,884 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:48:15,886 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:48:15,887 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:48:15,888 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:48:15,889 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:48:15,890 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:48:15,891 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:48:15,893 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:48:15,894 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:48:15,895 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:48:15,897 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 17:48:20,899 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:26,310 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:31,687 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:37,056 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:42,443 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:47,810 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:53,201 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:48:58,561 [29   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:49:03,935 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:49:09,321 [26   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:49:14,703 [24   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 17:49:18,812 [28   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:49:18,813 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:49:18,814 [28   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:49:18,814 [28   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:49:48,268 [23   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:49:48,284 [23   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:49:48,293 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,295 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,295 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,295 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,295 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,295 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,296 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,296 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,296 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,296 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,297 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,298 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,298 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,298 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,298 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,298 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:48,302 [23   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:49:48,528 [23   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:49:48,528 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:49:48,528 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:49:48,528 [23   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:49:48,992 [23   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:49:51,079 [23   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:49:51,118 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:49:51,119 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:49:51,128 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:49:51,144 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:49:51,199 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:49:52,138 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:49:52,284 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:49:52,284 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:49:52,288 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:49:52,289 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:49:52,290 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:49:52,291 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:49:52,291 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:49:52,725 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:49:52,745 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:49:52,759 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:49:52,760 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:49:52,761 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:49:52,763 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:49:52,764 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:49:52,766 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:49:52,767 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:49:52,769 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:49:52,770 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:49:52,795 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:49:52,796 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:49:52,798 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:49:52,799 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:49:52,800 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:49:52,801 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:49:52,802 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:49:52,804 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:49:52,805 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:49:52,806 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:49:52,807 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:49:52,809 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:49:52,811 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:49:52,813 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:49:52,814 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:49:52,815 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:49:52,816 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:49:52,817 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:49:52,819 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:50:23,065 [30   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:50:23,066 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:50:23,067 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:50:23,067 [30   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:50:24,682 [17   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"269478cd-9c6b-4ccf-aaf8-879c7b5bca0a","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:50:24.6687144Z","Properties":{}}
DEBUG 2018-01-30 17:50:31,531 [22   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:50:31,533 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:50:31,533 [22   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:50:31,533 [22   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:50:56,387 [23   ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:50:56,406 [23   ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:50:56,417 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,419 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,419 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,420 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,421 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,421 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,421 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,422 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,423 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,423 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,423 [23   ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:56,427 [23   ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:50:56,690 [23   ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:50:56,690 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:50:56,690 [23   ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:50:56,690 [23   ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:50:57,206 [23   ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:50:59,805 [23   ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:50:59,813 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:50:59,814 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:50:59,823 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:50:59,838 [23   ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:50:59,893 [23   ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:51:00,708 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:00,867 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:51:00,867 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:51:00,871 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:51:00,872 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:51:00,873 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:51:00,874 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:51:00,874 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:51:00,874 [23   ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:51:01,483 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:01,507 [23   ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:01,519 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:51:01,520 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:51:01,522 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:51:01,523 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:51:01,524 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:51:01,525 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:51:01,526 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:51:01,527 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:51:01,528 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:51:01,531 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:51:01,532 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:51:01,534 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:51:01,535 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:51:01,536 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:51:01,537 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:51:01,539 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:51:01,540 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:51:01,541 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:51:01,543 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:51:01,544 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:51:01,545 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:51:01,546 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:51:01,548 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:51:01,549 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:51:01,550 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:51:01,551 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:51:01,552 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:51:01,554 [23   ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
WARN  2018-01-30 17:51:05,854 [25   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
WARN  2018-01-30 17:51:11,250 [17   ] Abp.BackgroundJobs.BackgroundJobManager  - Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
Castle.MicroKernel.ComponentActivator.ComponentActivatorException: ComponentActivator: could not instantiate YiHan.Cms.EntityFramework.CmsDbContext ---> System.Reflection.TargetInvocationException: 调用的目标发生了异常。 ---> System.InvalidOperationException: The model backing the 'CmsDbContext' context has changed since the database was created. Consider using Code First Migrations to update the database (http://go.microsoft.com/fwlink/?LinkId=238269).
   在 System.Data.Entity.CreateDatabaseIfNotExists`1.InitializeDatabase(TContext context)
   在 System.Data.Entity.Internal.InternalContext.<>c__DisplayClassf`1.<CreateInitializationAction>b__e()
   在 System.Data.Entity.Internal.InternalContext.PerformInitializationAction(Action action)
   在 System.Data.Entity.Internal.InternalContext.PerformDatabaseInitialization()
   在 System.Data.Entity.Internal.LazyInternalContext.<InitializeDatabase>b__4(InternalContext c)
   在 System.Data.Entity.Internal.RetryAction`1.PerformAction(TInput input)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabaseAction(Action`1 action)
   在 System.Data.Entity.Internal.LazyInternalContext.InitializeDatabase()
   在 System.Data.Entity.Internal.InternalContext.ForceOSpaceLoadingForKnownEntityTypes()
   在 System.Data.Entity.DbContext.System.Data.Entity.Infrastructure.IObjectContextAdapter.get_ObjectContext()
   在 Abp.EntityFramework.AbpDbContext.RegisterToChanges()
   在 Abp.Zero.EntityFramework.AbpZeroDbContext`3..ctor(String nameOrConnectionString)
   在 YiHan.Cms.EntityFramework.CmsDbContext..ctor(String nameOrConnectionString) 位置 D:\代码\YiHanCms\src\YiHan.Cms.EntityFramework\EntityFramework\CmsDbContext.cs:行号 44
   --- 内部异常堆栈跟踪的结尾 ---
   在 System.RuntimeMethodHandle.InvokeMethod(Object target, Object[] arguments, Signature sig, Boolean constructor)
   在 System.Reflection.RuntimeConstructorInfo.Invoke(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.FastCreateInstance(Type implType, Object[] arguments, ConstructorCandidate constructor)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   --- 内部异常堆栈跟踪的结尾 ---
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstanceCore(ConstructorCandidate constructor, Object[] arguments, Type implType)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.CreateInstance(CreationContext context, ConstructorCandidate constructor, Object[] arguments)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.Instantiate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.DefaultComponentActivator.InternalCreate(CreationContext context)
   在 Castle.MicroKernel.ComponentActivator.AbstractComponentActivator.Create(CreationContext context, Burden burden)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.CreateInstance(CreationContext context, Boolean trackedExternally)
   在 Castle.MicroKernel.Lifestyle.AbstractLifestyleManager.Resolve(CreationContext context, IReleasePolicy releasePolicy)
   在 Castle.MicroKernel.Handlers.DefaultHandler.ResolveCore(CreationContext context, Boolean requiresDecommission, Boolean instanceRequired, Burden& burden)
   在 Castle.MicroKernel.Handlers.DefaultHandler.Resolve(CreationContext context, Boolean instanceRequired)
   在 Castle.MicroKernel.Handlers.AbstractHandler.Resolve(CreationContext context)
   在 Castle.MicroKernel.DefaultKernel.ResolveComponent(IHandler handler, Type service, IDictionary additionalArguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Castle.MicroKernel.IKernelInternal.Resolve(Type service, IDictionary arguments, IReleasePolicy policy)
   在 Castle.MicroKernel.DefaultKernel.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, IDictionary arguments)
   在 Castle.Windsor.WindsorContainer.Resolve(Type service, Object argumentsAsAnonymousType)
   在 Abp.Dependency.IocManager.Resolve(Type type, Object argumentsAsAnonymousType)
   在 Abp.EntityFramework.DefaultDbContextResolver.Resolve[TDbContext](String connectionString)
   在 Abp.EntityFramework.Uow.TransactionScopeEfTransactionStrategy.CreateDbContext[TDbContext](String connectionString, IDbContextResolver dbContextResolver)
   在 Abp.EntityFramework.Uow.EfUnitOfWork.GetOrCreateDbContext[TDbContext](Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkExtensions.GetDbContext[TDbContext](IActiveUnitOfWork unitOfWork, Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Uow.UnitOfWorkDbContextProvider`1.GetDbContext(Nullable`1 multiTenancySide)
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Context()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.get_Table()
   在 Abp.EntityFramework.Repositories.EfRepositoryBase`3.GetAll()
   在 Castle.Proxies.Invocations.IRepository`2_GetAll_3.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformSyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.IRepository`2Proxy_1.GetAll()
   在 Abp.BackgroundJobs.BackgroundJobStore.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync_callback(Int32 maxResultCount)
   在 Castle.Proxies.Invocations.BackgroundJobStore_GetWaitingJobsAsync.InvokeMethodOnTarget()
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformAsyncUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.PerformUow(IInvocation invocation, UnitOfWorkOptions options)
   在 Abp.Domain.Uow.UnitOfWorkInterceptor.Intercept(IInvocation invocation)
   在 Castle.DynamicProxy.AbstractInvocation.Proceed()
   在 Castle.Proxies.BackgroundJobStoreProxy.GetWaitingJobsAsync(Int32 maxResultCount)
   在 Abp.BackgroundJobs.BackgroundJobManager.<DoWork>b__13_0()
   在 System.Threading.Tasks.Task`1.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.<>c__DisplayClass16_0`1.<Run>b__0(Task`1 t)
   在 System.Threading.Tasks.ContinuationResultTaskFromResultTask`2.InnerInvoke()
   在 System.Threading.Tasks.Task.Execute()
--- 引发异常的上一位置中堆栈跟踪的末尾 ---
   在 System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task)
   在 System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   在 Nito.AsyncEx.Synchronous.TaskExtensions.WaitAndUnwrapException[TResult](Task`1 task)
   在 Nito.AsyncEx.AsyncContext.Run[TResult](Func`1 action)
   在 Abp.BackgroundJobs.BackgroundJobManager.DoWork()
   在 Abp.Threading.BackgroundWorkers.PeriodicBackgroundWorkerBase.Timer_Elapsed(Object sender, EventArgs e)
DEBUG 2018-01-30 17:51:13,789 [30   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:51:13,790 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:51:13,790 [30   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:51:13,790 [30   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
DEBUG 2018-01-30 17:51:38,145 [1    ] Abp.Modules.AbpModuleManager             - Loading Abp modules...
DEBUG 2018-01-30 17:51:38,164 [1    ] Abp.Modules.AbpModuleManager             - Found 21 ABP modules in total.
DEBUG 2018-01-30 17:51:38,172 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.Web.CmsWebModule, YiHan.Cms.Web, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,175 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.Mvc.AbpWebMvcModule, Abp.Web.Mvc, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,175 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebModule, Abp.Web, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,175 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.AbpWebCommonModule, Abp.Web.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,175 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpKernelModule, Abp, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,176 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AbpZeroOwinModule, Abp.Zero.Owin, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,176 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCoreModule, Abp.Zero, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,176 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.AbpZeroCommonModule, Abp.Zero.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,176 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsDataModule, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,176 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.EntityFramework.AbpZeroEntityFrameworkModule, Abp.Zero.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkModule, Abp.EntityFramework, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.EntityFramework.AbpEntityFrameworkCommonModule, Abp.EntityFramework.Common, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsCoreModule, YiHan.Cms.Core, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Zero.Ldap.AbpZeroLdapModule, Abp.Zero.Ldap, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.AutoMapper.AbpAutoMapperModule, Abp.AutoMapper, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,177 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.CmsApplicationModule, YiHan.Cms.Application, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,178 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: YiHan.Cms.WebApi.CmsWebApiModule, YiHan.Cms.WebApi, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,178 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.WebApi.AbpWebApiModule, Abp.Web.Api, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,178 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Web.SignalR.AbpWebSignalRModule, Abp.Web.SignalR, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,178 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Runtime.Caching.Redis.AbpRedisCacheModule, Abp.RedisCache, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,178 [1    ] Abp.Modules.AbpModuleManager             - Loaded module: Abp.Hangfire.AbpHangfireModule, Abp.HangFire, Version=3.1.1.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:38,182 [1    ] Abp.Modules.AbpModuleManager             - 21 modules loaded.
DEBUG 2018-01-30 17:51:38,412 [1    ] o.Configuration.LanguageManagementConfig - Converted Abp (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:51:38,413 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpWeb (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:51:38,413 [1    ] o.Configuration.LanguageManagementConfig - Converted AbpZero (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:51:38,413 [1    ] o.Configuration.LanguageManagementConfig - Converted Cms (Abp.Localization.Dictionaries.DictionaryBasedLocalizationSource) to MultiTenantLocalizationSource
DEBUG 2018-01-30 17:51:38,887 [1    ] EntityFramework.AbpEntityFrameworkModule - Registering DbContext: YiHan.Cms.EntityFramework.CmsDbContext, YiHan.Cms.EntityFramework, Version=4.6.0.0, Culture=neutral, PublicKeyToken=null
DEBUG 2018-01-30 17:51:40,892 [1    ] Abp.Localization.LocalizationManager     - Initializing 4 localization sources.
DEBUG 2018-01-30 17:51:40,900 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Abp
DEBUG 2018-01-30 17:51:40,901 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpWeb
DEBUG 2018-01-30 17:51:40,973 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: AbpZero
DEBUG 2018-01-30 17:51:40,987 [1    ] Abp.Localization.LocalizationManager     - Initialized localization source: Cms
DEBUG 2018-01-30 17:51:41,044 [1    ] Abp.BackgroundJobs.BackgroundJobManager  - Start background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:51:41,893 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:42,031 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - Found 45 classes define auto mapping attributes
DEBUG 2018-01-30 17:51:42,031 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Cache.FriendCacheItem
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.TenantLoginInfoDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Sessions.Dto.UserLoginInfoDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Organizations.Dto.OrganizationUnitUserListDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Notifications.Dto.NotificationSubscriptionWithDisplayNameDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantListDto
DEBUG 2018-01-30 17:51:42,035 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.MultiTenancy.Dto.TenantEditDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageEditDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Localization.Dto.ApplicationLanguageListDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Friendships.Dto.FriendDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionEditDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.FlatFeatureDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Editions.Dto.EditionListDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeEditDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ArticeListDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryEditDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.CategoryListDto
DEBUG 2018-01-30 17:51:42,036 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryEditDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImGalleryListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryEditDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.ImgCategoryListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingEditDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.CmsApp.Dtos.SysSettingListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatMessageDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Chat.Dto.ChatUserWithMessagesDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Profile.Dto.CurrentUserProfileEditDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserLoginAttemptDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Roles.Dto.RoleEditDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Permissions.Dto.FlatPermissionWithLevelDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Auditing.Dto.AuditLogListDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Authorization.Users.Dto.UserListDto+UserListRoleDto
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.UserPermissionsEditViewModel
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Users.CreateOrEditUserModalViewModel
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Profile.MySettingsViewModel
DEBUG 2018-01-30 17:51:42,037 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Editions.CreateOrEditEditionModalViewModel
DEBUG 2018-01-30 17:51:42,038 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Tenants.TenantFeaturesEditViewModel
DEBUG 2018-01-30 17:51:42,038 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Roles.CreateOrEditRoleModalViewModel
DEBUG 2018-01-30 17:51:42,038 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.OrganizationUnits.EditOrganizationUnitModalViewModel
DEBUG 2018-01-30 17:51:42,038 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Areas.Mpa.Models.Languages.CreateOrEditLanguageModalViewModel
DEBUG 2018-01-30 17:51:42,038 [1    ] Abp.AutoMapper.AbpAutoMapperModule       - YiHan.Cms.Web.Models.Account.TenantSelectionViewModel+TenantInfo
DEBUG 2018-01-30 17:51:42,490 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:42,511 [1    ] Abp.Owin.OwinUserTokenProviderAccessor   - DataProtectionProvider has not been set yet.
DEBUG 2018-01-30 17:51:42,525 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Timing.ITimingAppService' with service name 'app/timing'.
DEBUG 2018-01-30 17:51:42,526 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Tenants.Dashboard.ITenantDashboardAppService' with service name 'app/tenantDashboard'.
DEBUG 2018-01-30 17:51:42,527 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Sessions.ISessionAppService' with service name 'app/session'.
DEBUG 2018-01-30 17:51:42,529 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Organizations.IOrganizationUnitAppService' with service name 'app/organizationUnit'.
DEBUG 2018-01-30 17:51:42,530 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Notifications.INotificationAppService' with service name 'app/notification'.
DEBUG 2018-01-30 17:51:42,531 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.MultiTenancy.ITenantAppService' with service name 'app/tenant'.
DEBUG 2018-01-30 17:51:42,533 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Logging.IWebLogAppService' with service name 'app/webLog'.
DEBUG 2018-01-30 17:51:42,534 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Localization.ILanguageAppService' with service name 'app/language'.
DEBUG 2018-01-30 17:51:42,535 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Friendships.IFriendshipAppService' with service name 'app/friendship'.
DEBUG 2018-01-30 17:51:42,536 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Editions.IEditionAppService' with service name 'app/edition'.
DEBUG 2018-01-30 17:51:42,538 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Tenants.ITenantSettingsAppService' with service name 'app/tenantSettings'.
DEBUG 2018-01-30 17:51:42,539 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Configuration.Host.IHostSettingsAppService' with service name 'app/hostSettings'.
DEBUG 2018-01-30 17:51:42,540 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Common.ICommonLookupAppService' with service name 'app/commonLookup'.
DEBUG 2018-01-30 17:51:42,543 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IArticeAppService' with service name 'app/artice'.
DEBUG 2018-01-30 17:51:42,544 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ICategoryAppService' with service name 'app/category'.
DEBUG 2018-01-30 17:51:42,545 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImGalleryAppService' with service name 'app/imGallery'.
DEBUG 2018-01-30 17:51:42,547 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.IImgCategoryAppService' with service name 'app/imgCategory'.
DEBUG 2018-01-30 17:51:42,548 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ISysSettingAppService' with service name 'app/sysSetting'.
DEBUG 2018-01-30 17:51:42,549 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.CmsApp.ITemplateAppService' with service name 'app/template'.
DEBUG 2018-01-30 17:51:42,551 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Chat.IChatAppService' with service name 'app/chat'.
DEBUG 2018-01-30 17:51:42,552 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Caching.ICachingAppService' with service name 'app/caching'.
DEBUG 2018-01-30 17:51:42,553 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLinkAppService' with service name 'app/userLink'.
DEBUG 2018-01-30 17:51:42,556 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserLoginAppService' with service name 'app/userLogin'.
DEBUG 2018-01-30 17:51:42,558 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.IUserAppService' with service name 'app/user'.
DEBUG 2018-01-30 17:51:42,559 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Users.Profile.IProfileAppService' with service name 'app/profile'.
DEBUG 2018-01-30 17:51:42,560 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Roles.IRoleAppService' with service name 'app/role'.
DEBUG 2018-01-30 17:51:42,561 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Authorization.Permissions.IPermissionAppService' with service name 'app/permission'.
DEBUG 2018-01-30 17:51:42,563 [1    ] Abp.Logging.LogHelper                    - Dynamic web api controller is created for type 'YiHan.Cms.Auditing.IAuditLogAppService' with service name 'app/auditLog'.
DEBUG 2018-01-30 17:51:48,370 [30   ] Abp.Web.SignalR.Hubs.AbpCommonHub        - A client is connected: {"ConnectionId":"ae2893ed-e983-4448-9c45-7d628ecff302","IpAddress":"::1","TenantId":null,"UserId":1,"ConnectTime":"2018-01-30T09:51:48.355501Z","Properties":{}}
DEBUG 2018-01-30 17:56:56,234 [14   ] Abp.Modules.AbpModuleManager             - Shutting down has been started
DEBUG 2018-01-30 17:56:56,236 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - Stop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:56:56,237 [14   ] Abp.BackgroundJobs.BackgroundJobManager  - WaitToStop background worker: Abp.BackgroundJobs.BackgroundJobManager
DEBUG 2018-01-30 17:56:56,237 [14   ] Abp.Modules.AbpModuleManager             - Shutting down completed.
